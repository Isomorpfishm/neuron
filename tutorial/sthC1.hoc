begintemplate SThcell
public soma, treeA, treeB, nclist

create soma, treeA[1], treeB[1]
objectvar f, nclist

proc init() {local i, me, child1, child2
	
	create soma

	nclist = new List()

	soma {
		nseg = 1
		diam = 18.8
		L = 18.8
		Ra = 123.0
		insert hh
		gnabar_hh = 0.25
		gl_hh = .0001666
		el_hh = -60.0
	}

	f = new File()
	f.ropen("treeA.dat")

	ndendA = 23
	create treeA[ndendA]

	for i = 0, ndendA - 1 {
		me = f.scanvar() - 1
		child1 = f.scanvar() - 1
		child2 = f.scanvar() - 1

		treeA[me] {
			nseg = 5
			diam = f.scanvar()
			L = f.scanvar()
			Ra = 123
			// initialise and clear the 3D information
			pt3dclear()
			pt3dadd(f.scanvar(), f.scanvar(), f.scanvar(), diam)
			pt3dadd(f.scanvar(), f.scanvar(), f.scanvar(), diam)
			insert pas
			g_pas = .0001666
			e_pas = -60.0

			if(child1 >= 0) {
				connect treeA[child1](0), 1
			}
			if(child2 >= 0) {
				connect treeA[child2](0), 1
			}
		}
	}

	f.close()

	f.ropen("treeA.dat")

	ndendB = 11
	create treeB[ndendB]

	for i = 0, ndendB - 1 {
		me = f.scanvar() - 1
		child1 = f.scanvar() - 1
		child2 = f.scanvar() - 1

		treeB[me] {
			nseg = 5
			diam = f.scanvar()
			L = f.scanvar()
			Ra = 123
			// initialise and clear the 3D information
			pt3dclear()
			pt3dadd(f.scanvar(), f.scanvar(), f.scanvar(), diam)
			pt3dadd(f.scanvar(), f.scanvar(), f.scanvar(), diam)
			insert pas
			g_pas = .0001666
			e_pas = -60.0

			if(child1 >= 0) {
				connect treeB[child1](0), 1
			}
			if(child2 >= 0) {
				connect treeB[child2](0), 1
			}
		}
	}

	f.close()

	// Connect things together
	connect treeA[0](0), soma(0)
	connect treeB[1](0), soma(1)
}
endtemplate SThcell


// <------------------------------------------------------------------------------------------------------> 


// create four new neurons
nSThcells = 4
objectvar SThcells[nSThcells]

// create all four of our cells using the `new` command in a `for` loop
for i = 0, nSThcells-1 {
	SThcells[i] = new SThcell(20)
}


// <------------------------------------------------------------------------------------------------------> 


maxsyn = 10
objectvar syn[maxsyn]
SThcells[0].treeA[7] syn[0] = new ExpSyn(0)

// define the source of events for a synapse
// FORMAT: new NetCon(&source_v, synapse, threshold, delay, weight)
// to connect SThcells[1] to the proximal end of treeA dendritic branch 7 on subthalamic neuron SThcells[0]:
SThcells[1].soma SThcells[0].nclist.append(new NetCon(&v(1), syn[0], -20, 1, 0.5))

// to changer properties of the connections
for i = 0, SThcells[0].nclist.count()-1 {
	SThcells[0].nclist.object(i).weight = 0.6
}
// will change all of the weights onto SThcells[0] to 0.6



// <------------------------------------------------------------------------------------------------------> 

objectvar stim[nSThcells]

for i = 0, nSThcells-1 SThcells[i].soma {
	stim[i] = new IClamp(0.5)
	stim[i].del = 100
	stim[i].dur = 100
	stim[i].amp = 0.1
	tstop = 300
}

// access SThcells[0].soma
