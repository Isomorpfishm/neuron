// templates: a simple way to create multiple copies of the same neuron
// It defines a prototype of an object from which we can create multiple copies

begintemplate SThcell
public soma, dend

create soma, dend[1]

proc init() {

	nsegdend = $1
	ndend = 2

	create soma, dend[ndend]

	soma {
		nseg = 1
		diam = 18.8
		L = 18.8
		Ra = 123.0
		insert hh
		gnabar_hh = 0.25
		gl_hh = .0001666
		el_hh = -60.0
	}

	dend[0] {
		nseg = nsegdend
		diam = 3.18
		L = 701.9
		Ra = 123
		insert pas
		g_pas = .0001666
		e_pas = -60.0
	}

	dend[1] {
		nseg = nsegdend
		diam = 2.0
		L = 549.1
		Ra = 123
		insert pas
		g_pas = .0001666
		e_pas = -60.0
	}

	// Connect things together
	connect dend[0](0), soma(0)
	connect dend[1](0), soma(1)
}
endtemplate SThcell

// create new neurons from this template is straightforward
nSThcells = 4
objectvar SThcells[nSThcells]

// create all four of our cells using the `new` command in a `for` loop
for i = 0, nSThcells-1 {
	SThcells[i] = new SThcell(3*(i+1))
}

for i = 0, nSThcells-1 SThcells[i].soma {
	stim[i] = new IClamp(0.5)
	stim[i].del = 100
	stim[i].dur = 100
	stim[i].amp = 0.1
}

access SThcells[0].soma
